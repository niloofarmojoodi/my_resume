{"version":3,"sources":["components/FullPage.js","components/ArrowDown.js","Sections/TitleSection.js","Sections/AboutSection.js","components/SkillCard.js","Sections/SkillSection.js","Sections/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["FullPage","props","state","children","this","className","style","backgroundColor","background","Component","ArrowDown","display","flexDirection","alignItems","justifyContent","src","maxWidth","marginTop","transform","TitleSection","id","color","data","title","subtitle","Object","keys","links","map","key","url","activeClass","to","spy","smooth","offset","duration","onSetActive","handleSetActive","name","AboutSection","sections","items","content","skill","image","SkillSection","eachskill","Navigation","variant","fixed","Link","class","App","changeColor","rang","counter","setState","background_first","background_second","background_third","alt","onClick","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e148a69c.chunk.js","sourcesContent":["import React , {Component} from 'react';\r\nimport './FullPage.css';\r\n\r\nclass FullPage extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n      }\r\n    render(){\r\n        const {children} = this.props\r\n        return(\r\n            <div className={`fullPage ${this.props.className || '' }`} style={{\r\n                backgroundColor:this.props.background\r\n            }}>\r\n                {children}\r\n       \r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default FullPage;","import React, { Component } from \"react\";\r\n\r\n\r\nclass ArrowDown extends Component {\r\n  render() {\r\n    return (\r\n      <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        background: this.props.background\r\n      }}\r\n    >\r\n        <img\r\n          src=\"down2.png\"\r\n          style={{\r\n            maxWidth: \"30px\",\r\n            marginTop:\"100px\",\r\n            transform: \"translateY(-45px)\"\r\n          }}\r\n        />\r\n      \r\n    </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default ArrowDown;\r\n\r\n","import React, { Component } from \"react\";\r\nimport data from \"../data.json\";\r\nimport FullPage from \"../components/FullPage\";\r\nimport ArrowDown from \"../components/ArrowDown\";\r\nimport { SocialIcon } from \"react-social-icons\";\r\nimport { Link, Element } from \"react-scroll\";\r\nimport SnowStorm from 'react-snowstorm';\r\nimport \"./TitleSection.css\";\r\n\r\n\r\nclass TitleSection extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n        <FullPage className=\"first1\"\r\n         background={this.props.background} >\r\n          <SnowStorm />\r\n          <h1 id=\"home\" style={{color:this.props.color}}>{data.title}</h1>\r\n          <h2 id=\"subtitle\" style={{color:this.props.color}}>{data.subtitle}</h2>\r\n          <div>\r\n            {Object.keys(data.links).map(key => {\r\n              return <SocialIcon className=\"icon\" url={data.links[key]} />;\r\n            })}\r\n          </div>\r\n          <Link\r\n          activeClass=\"active\"\r\n          to=\"about\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={136}\r\n          duration={530}\r\n          onSetActive={this.handleSetActive}\r\n        >\r\n          <ArrowDown/>\r\n        </Link>\r\n\r\n        <Element name=\"about\" className=\"element\"/>\r\n\r\n        </FullPage>\r\n        \r\n        \r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default TitleSection;\r\n","import React, { Component } from \"react\";\r\nimport data from \"../data.json\";\r\nimport FullPage from \"../components/FullPage\";\r\n\r\nimport {  Element } from \"react-scroll\";\r\nimport './AboutSection.css'\r\n\r\n\r\nclass AboutSection extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <FullPage className=\"second\" background={this.props.background } >\r\n        <h1 id=\"second\" style={{ color: this.props.color }} >{data.sections[0].title}</h1>\r\n        <p>{data.sections[0].items[0].content}</p>\r\n        \r\n\r\n        <Element name=\"skills\" className=\"element\"/>\r\n      </FullPage>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AboutSection;","import React , {Component} from 'react';\r\nimport './SkillCard.css';\r\n\r\nclass FullPage extends Component{\r\n    render(){\r\n        const {skill} = this.props\r\n        return(\r\n            <div className=\"carddd\">\r\n                <div className=\"image-wrapper\">\r\n                  <img id=\"img\" src={skill.content.image}></img>\r\n                </div>\r\n\r\n                <div className=\"skill-title-wrapper\">\r\n                  <h4>{skill.content.title}</h4>\r\n                </div>\r\n           </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FullPage;","import React, { Component } from \"react\";\r\nimport data from \"../data.json\";\r\nimport SkillCard from '../components/SkillCard'\r\nimport FullPage from \"../components/FullPage\";\r\nimport './SkillSection.css'\r\n\r\nclass SkillSection extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <FullPage className=\"third\"\r\n      background={this.props.background} >\r\n        <h1 id=\"third\" style={{color:this.props.color}}>{data.sections[1].title}</h1>\r\n        <div className=\"card-wrapper\">\r\n          {data.sections[1].items.map(eachskill => {\r\n            return (\r\n              <SkillCard skill = {eachskill}/>\r\n            );\r\n          })}\r\n        </div>\r\n      </FullPage>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SkillSection;","import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport \"./Navigation.css\";\r\nimport { Link, Element } from \"react-scroll\";\r\n\r\nclass Navigation extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Navbar  variant=\"light\" fixed=\"top\">\r\n          <Nav className=\"mr-auto\">\r\n            <Link\r\n              activeClass=\"active\"\r\n              to=\"about\"\r\n              spy={true}\r\n              smooth={true}\r\n              offset={115}\r\n              duration={530}\r\n              onSetActive={this.handleSetActive}\r\n            >\r\n              <Nav.Link class=\"nav-link\">About</Nav.Link>\r\n            </Link>\r\n\r\n            <Element name=\"about\" className=\"element\" />\r\n            <Link\r\n              activeClass=\"active\"\r\n              to=\"skills\"\r\n              spy={true}\r\n              smooth={true}\r\n              offset={240}\r\n              duration={550}\r\n              onSetActive={this.handleSetActive}\r\n            >\r\n              <Nav.Link class=\"nav-link\">Skills</Nav.Link>\r\n            </Link>\r\n\r\n            <Element name=\"skills\" className=\"element\" />\r\n            \r\n            \r\n          </Nav>\r\n        </Navbar>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;\r\n","import React , {Component} from \"react\";\nimport TitleSection from \"./Sections/TitleSection\";\nimport AboutSection from \"./Sections/AboutSection\";\nimport SkillsSection from \"./Sections/SkillSection\";\nimport Navigation from \"./Sections/Navigation\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      color: \"white\",\n      background: \"#004080\",\n      counter: 0\n    };\n  }\n  changeColor = () => {\n    let rang = [\"black\", \"#b3cde0\", \"orange\", \"yellow\"];\n    let zamine_1 = [\"#14812c\", \"#a30522\", \"#071066\"];\n    let zamine_2 = [\"\t#1dd247\", \"#fa123e\", \"#0e1ea7\"];\n    let zamine_3 = [\"#58e779\", \"#fa6c86\", \"#3f52ee\"];\n    if (this.state.counter >= 3) {\n      this.setState({\n        counter: 0,\n        color: rang[this.state.counter],\n        background_first: \"#00FA9A\",\n        background_second: \"#3CB371\",\n        background_third: \"\t#90EE90\",\n      });\n    } else{\n      this.setState({\n        color: rang[this.state.counter],\n        background_first: zamine_1[this.state.counter],\n        background_second: zamine_2[this.state.counter],\n        background_third: zamine_3[this.state.counter],\n        counter: this.state.counter + 1\n      });\n      \n    }\n      \n  };\n  render(){\n    return (\n      <div className=\"App\">\n        \n        <Navigation />\n        <div className=\"change-color\" >\n            <img \n            src=\"./paint-palette.png\" alt=\"\" onClick={this.changeColor} \n        ></img>\n        </div>\n        <TitleSection \n          color={this.state.color}\n          background={this.state.background_first} />\n        <AboutSection \n         color={this.state.color}\n         background={this.state.background_second}/>\n        <SkillsSection \n        color={this.state.color}\n        background={this.state.background_third}\n        />\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}